{"ast":null,"code":"import { environment } from '../../app/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TodoService {\n  constructor(http) {\n    this.http = http;\n  }\n  getTodos() {\n    const url = environment.baseURL;\n    return this.http.get(url);\n  }\n  postTodos(param) {\n    const url = environment.baseURL;\n    return this.http.post(url, param);\n  }\n  deleteTodo(id) {\n    const url = environment.baseURL + '/' + id;\n    return this.http.delete(url);\n  }\n  deleteTodo(i) {\n    const id = this.todos[i]._id;\n    this.todoService.deleteTodo(id).subscribe({\n      next: response => {\n        console.log(response);\n        location.reload();\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n}\nTodoService.ɵfac = function TodoService_Factory(t) {\n  return new (t || TodoService)(i0.ɵɵinject(i1.HttpClient));\n};\nTodoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TodoService,\n  factory: TodoService.ɵfac\n});\n;","map":{"version":3,"names":["environment","TodoService","constructor","http","getTodos","url","baseURL","get","postTodos","param","post","deleteTodo","id","delete","i","todos","_id","todoService","subscribe","next","response","console","log","location","reload","error","i0","ɵɵinject","i1","HttpClient","factory","ɵfac"],"sources":["C:\\Users\\User\\Downloads\\TechCamp_BE\\angular-to-do-list\\src\\app\\services\\todo.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../app/environments/environment';\r\n\r\n@Injectable()\r\nexport class TodoService {\r\n    constructor(private http: HttpClient) {};\r\n    getTodos(): Observable<any> {\r\n        const url = environment.baseURL;\r\n        return this.http.get(url);\r\n    };\r\n    postTodos(param: any): Observable<any> {\r\n        const url = environment.baseURL;\r\n        return this.http.post(url, param);\r\n    };\r\n    deleteTodo(id: any): Observable<any> {\r\n        const url = environment.baseURL + '/' + id;\r\n        return this.http.delete(url);\r\n    };\r\n    deleteTodo(i: any) {\r\n        const id = this.todos[i]._id;\r\n\r\n    this.todoService.deleteTodo(id).subscribe({\r\n          next: (response) => {\r\n            console.log(response);\r\n            location.reload();\r\n          },\r\n          error: (error) => {\r\n            console.log(error);\r\n          },\r\n        });\r\n     }\r\n\r\n};\r\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,oCAAoC;;;AAGhE,OAAM,MAAOC,WAAW;EACpBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EACvCC,QAAQA,CAAA;IACJ,MAAMC,GAAG,GAAGL,WAAW,CAACM,OAAO;IAC/B,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAACF,GAAG,CAAC;EAC7B;EACAG,SAASA,CAACC,KAAU;IAChB,MAAMJ,GAAG,GAAGL,WAAW,CAACM,OAAO;IAC/B,OAAO,IAAI,CAACH,IAAI,CAACO,IAAI,CAACL,GAAG,EAAEI,KAAK,CAAC;EACrC;EACAE,UAAUA,CAACC,EAAO;IACd,MAAMP,GAAG,GAAGL,WAAW,CAACM,OAAO,GAAG,GAAG,GAAGM,EAAE;IAC1C,OAAO,IAAI,CAACT,IAAI,CAACU,MAAM,CAACR,GAAG,CAAC;EAChC;EACAM,UAAUA,CAACG,CAAM;IACb,MAAMF,EAAE,GAAG,IAAI,CAACG,KAAK,CAACD,CAAC,CAAC,CAACE,GAAG;IAEhC,IAAI,CAACC,WAAW,CAACN,UAAU,CAACC,EAAE,CAAC,CAACM,SAAS,CAAC;MACpCC,IAAI,EAAGC,QAAQ,IAAI;QACjBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrBG,QAAQ,CAACC,MAAM,EAAE;MACnB,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACfJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;MACpB;KACD,CAAC;EACL;;AA1BQxB,WAAW,C;mBAAXA,WAAW,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAX5B,WAAW,C;SAAXA,WAAW;EAAA6B,OAAA,EAAX7B,WAAW,CAAA8B;AAAA;AA4BvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}